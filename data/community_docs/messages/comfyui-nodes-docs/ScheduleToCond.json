[
    {
        "question": "ScheduleToCond节点属于哪个类别？",
        "answer": "ScheduleToCond节点属于'promptcontrol'类别，用于处理与提示相关的条件生成任务，可以影响CLIP模型的输出。"
    },
    {
        "question": "ScheduleToCond的'apply'方法执行什么功能？",
        "answer": "ScheduleToCond的'apply'方法通过将提示计划和CLIP模型集成，生成条件输入，这些条件输入将用于后续处理或作为模型输入的一部分，从而影响模型的输出。"
    },
    {
        "question": "ScheduleToCond节点中'clip'参数的作用是什么？",
        "answer": "'clip'参数在ScheduleToCond节点中是核心组件，它代表了将应用提示计划的CLIP模型，决定条件处理过程和节点输出。"
    },
    {
        "question": "在ScheduleToCond中，'prompt_schedule'参数如何影响节点的运行？",
        "answer": "'prompt_schedule'参数在ScheduleToCond节点中定义了将文本提示应用于CLIP模型的时间表，决定了文本提示如何调节模型的行为，对模型输出的调控至关重要。"
    },
    {
        "question": "ScheduleToCond节点输出的'CONDITIONING'代表什么？",
        "answer": "输出'CONDITIONING'代表了由提示计划派生并应用于CLIP模型的条件集，它是进一步操作或作为下游任务输入的基础。"
    },
    {
        "question": "ScheduleToCond节点的哪种输入对输出的生成至关重要？",
        "answer": "在ScheduleToCond节点中，'clip'和'prompt_schedule'输入对输出的生成至关重要，它们共同决定了条件集的生成，从而影响模型的输出。"
    },
    {
        "question": "ScheduleToCond节点的源代码中，'FUNCTION'属性设置为什么？",
        "answer": "ScheduleToCond节点的'FUNCTION'属性设置为'apply'，意味着当节点被调用时，执行的核心功能是'apply'方法，该方法处理并应用提示计划给定的CLIP模型。"
    }
]