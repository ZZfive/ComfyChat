[
    {
        "question": "PromptComposerGrouping节点的作用是什么？",
        "answer": "PromptComposerGrouping节点通过调整输入文本的权重和结构，创造性地处理文本，为各种AI应用生成修改后的提示。"
    },
    {
        "question": "PromptComposerGrouping节点的必填输入类型有哪些？",
        "answer": "PromptComposerGrouping节点的必填输入类型包括'text_in'，这是节点操作的基础，其内容和结构直接影响输出结果。"
    },
    {
        "question": "在PromptComposerGrouping节点中，'weight'参数有何用途？",
        "answer": "'weight'参数用于微调应用于输入文本的转换，影响生成提示的强调和呈现。"
    },
    {
        "question": "如何控制PromptComposerGrouping节点的执行状态？",
        "answer": "通过改变'active'激活标志，可以决定节点的处理是否应用于输入文本，从而控制节点的执行。"
    },
    {
        "question": "哪些应用可以从使用PromptComposerGrouping节点中受益？",
        "answer": "各种AI应用，特别是那些需要根据特定权重和结构生成修改后的提示的场景，可以从使用PromptComposerGrouping节点中受益。"
    },
    {
        "question": "在ComfyUI中，如何区分和处理PromptComposerGrouping的输出文本？",
        "answer": "输出文本'text_out'是节点处理的结果，包含了准备用于AI应用的修改后的提示，在ComfyUI中作为STRING类型，即在Python中为str类型进行处理。"
    },
    {
        "question": "PromptComposerGrouping节点在什么类型的基础设施上运行最有效？",
        "answer": "PromptComposerGrouping节点在CPU类型的基础设施上运行最有效，这可能是由于其算法逻辑并不特别依赖于GPU加速。"
    }
]