[
    {
        "question": "WAS_Text_String_Truncate节点的truncate_string方法是做什么的？",
        "answer": "WAS_Text_String_Truncate节点的`truncate_string`方法用于将输入字符串缩减到指定长度，支持按字符或单词从字符串的开头或结尾进行截断，以保持信息的完整性。"
    },
    {
        "question": "哪些参数决定了WAS_Text_String_Truncate节点截断文本的单位和方式？",
        "answer": "参数'truncate_by'决定截断的单位（字符或单词），而'truncate_from'决定截断从文本的开头还是结尾开始，共同影响文本的缩减方式和保留部分。"
    },
    {
        "question": "WAS_Text_String_Truncate节点的主要输入是什么？",
        "answer": "WAS_Text_String_Truncate的主要输入是参数'text'，表示将要被截断的字符串，是节点操作以减少文本长度同时保留核心信息的关键元素。"
    },
    {
        "question": "哪些输入参数可用于扩展WAS_Text_String_Truncate节点处理多个字符串的能力？",
        "answer": "可选参数'text_b', 'text_c', 'text_d'允许WAS_Text_String_Truncate节点同时处理多个字符串，增强了节点在文本管理中的实用性。"
    },
    {
        "question": "在WAS_Text_String_Truncate中，如何指定文本截断的最大长度？",
        "answer": "通过设置参数'truncate_to'，可以指定文本应该被截断至的最大长度，定义了截断过程后字符串的最终长度。"
    },
    {
        "question": "WAS_Text_String_Truncate节点的输出是什么，代表什么？",
        "answer": "WAS_Text_String_Truncate节点输出包括'truncated_text'及可选的'truncated_text_b', 'truncated_text_c', 'truncated_text_d'，代表分别对输入文本进行截断后的结果，确保了简洁且相关的信息输出。"
    },
    {
        "question": "如何使用WAS_Text_String_Truncate节点对一个字符串进行按字符从开头截断？",
        "answer": "使用WAS_Text_String_Truncate节点时，设置'truncate_by'为'characters'，'truncate_from'为'beginning'，并指定'truncate_to'为期望的长度，即可实现字符串从开头开始按字符进行截断。"
    }
]