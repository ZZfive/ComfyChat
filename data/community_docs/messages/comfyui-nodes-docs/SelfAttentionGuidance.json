[
    {
        "question": "SelfAttentionGuidance 类的主要作用是什么？",
        "answer": "SelfAttentionGuidance 类的主要作用是通过提供基于自注意力的指导来增强模型中的注意力机制，通过修改模型的注意力过程来融入额外的上下文，可能提高模型关注输入数据相关部分的能力。"
    },
    {
        "question": "SelfAttentionGuidance 节点处理的模型参数类型是什么？",
        "answer": "SelfAttentionGuidance 节点处理的模型参数类型是 MODEL，具体在 Python 中表现为 torch.nn.Module 类型，这是节点进行修改和指导的机器学习模型。"
    },
    {
        "question": "在 SelfAttentionGuidance 中，scale 参数的作用是什么？",
        "answer": "scale 参数调整自注意力指导对模型输出的影响，允许微调节点对模型注意力过程的影响，是 ComfyUI 中定义为 FLOAT 类型，范围从 -2.0 到 5.0。"
    },
    {
        "question": "什么是 SelfAttentionGuidance 中的 blur_sigma 参数，并解释其意义？",
        "answer": "blur_sigma 参数定义了在模型的后配置函数中应用的模糊程度，这一参数影响模型输出的视觉质量和细节保留，也是 FLOAT 类型，范围从 0.0 到 10.0。"
    },
    {
        "question": "SelfAttentionGuidance 的输出类型是什么？",
        "answer": "SelfAttentionGuidance 的输出类型是 modified_model，这是将 SelfAttentionGuidance 补丁应用于输入模型的结果，表示具有增强注意力机制的模型，使用的特点是 Pytorch 模块类型，即 torch.nn.Module。"
    },
    {
        "question": "如何使用 SelfAttentionGuidance 节点，特别是在硬件需求方面？",
        "answer": "SelfAttentionGuidance 节点的使用需要考虑到的硬件类型是 GPU，这是因为充分利用GPU的并行处理能力可以加速模型的训练或推理过程，特别适用于涉及深度学习模型的复杂计算。"
    },
    {
        "question": "SelfAttentionGuidance 的源代码中哪些函数至关重要并且如何影响模型处理？",
        "answer": "SelfAttentionGuidance 的 patch 函数中 attn_and_record 和 post_cfg_function 函数至关重要，它们分别操作模型的注意力机制和配置后处理，通过修改模型的注意力过程和输出设置来融入额外的上下文，从而实现模型注意力机制的增强。"
    }
]