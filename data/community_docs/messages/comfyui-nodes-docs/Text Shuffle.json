[
    {
        "question": "Text Shuffle节点主要用于什么功能？",
        "answer": "Text Shuffle节点，即WAS_Text_Shuffle，主要用于重新排列给定文本字符串中的元素顺序。它通过随机打乱元素列表，再将它们组合成一个新的字符串，适用于数据增强或创建多样化输出的需求。"
    },
    {
        "question": "Text Shuffle节点的'shuffle'方法如何操作文本？",
        "answer": "'shuffle'方法通过使用指定分隔符将文本分割，随机打乱这些元素，再重新组合成新的字符串，以实现文本顺序的重新排列。"
    },
    {
        "question": "哪些输入参数是Text Shuffle节点所必需的？",
        "answer": "Text Shuffle节点必需的输入参数是'text'，即需要被打乱的输入文本，它定义了节点运作的基础和重新排列的对象。"
    },
    {
        "question": "'separator'参数在Text Shuffle节点中起什么作用？",
        "answer": "'separator'参数定义了文本中元素的分隔符，是将输入文本分割成独立元素的关键，同时可自定义，以适应不同的文本结构。"
    },
    {
        "question": "Text Shuffle节点的'seed'参数有何用途？",
        "answer": "'seed'参数用于初始化随机数生成器，确保打乱顺序的可复现性。通过设定相同的种子值，可以在多次执行中获得一致的结果，有助于控制随机性，确保实验或任务的一致性。"
    },
    {
        "question": "Text Shuffle节点的输出结果是什么？",
        "answer": "Text Shuffle节点的主要输出是'shuffled_text'，即经元素随机重排后得到的文本。它是节点操作的直接产物，用于后续处理或分析的输入。"
    },
    {
        "question": "Text Shuffle节点的执行优化适用于哪种类型的硬件？",
        "answer": "Text Shuffle节点的执行优化适用于CPU硬件，这是基于它的基础算法和运算需求决定的。"
    }
]