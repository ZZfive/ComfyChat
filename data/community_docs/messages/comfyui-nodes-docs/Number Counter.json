[
    {
        "question": "WAS_Number_Counter节点用于什么场景?",
        "answer": "WAS_Number_Counter节点用于ComfyUI，根据指定的操作模式管理和操作数值，适用于序列生成或迭代数值调整的应用程序。"
    },
    {
        "question": "哪些节点可以处理数值递增和递减？",
        "answer": "WAS_Number_Counter节点可以处理数值递增和递减，同时也支持边界控制的计数操作。"
    },
    {
        "question": "WAS_Number_Counter的'number_type'参数的作用是什么？",
        "answer": "'number_type'参数确定了WAS_Number_Counter节点将处理的数值类型，可以是整数或浮点数，影响精度和算术操作类型。"
    },
    {
        "question": "如何控制WAS_Number_Counter节点的计数模式？",
        "answer": "通过设置'mode'参数，可以控制WAS_Number_Counter节点的计数模式，包括递增、递减、递增到停止值或递减到停止值。"
    },
    {
        "question": "在WAS_Number_Counter中，'reset_bool'参数的用途是什么？",
        "answer": "'reset_bool'参数在设置为大于或等于1的值时，可以将WAS_Number_Counter节点中的计数器重置为其初始值，提供重新开始计数操作的方法。"
    },
    {
        "question": "WAS_Number_Counter节点的哪些输出类型表示了计数器的当前值？",
        "answer": "WAS_Number_Counter节点的'number'和'float'输出类型提供了整数和浮点表示的计数器当前值，而'int'输出返回了计数器的整数值。"
    },
    {
        "question": "WAS_Number_Counter节点如何独立跟踪和管理多个计数操作？",
        "answer": "WAS_Number_Counter节点通过'unique_id'参数为每个计数器提供唯一标识符，确保每个计数操作被独立跟踪和管理。"
    }
]