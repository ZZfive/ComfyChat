[
    {
        "question": "KfGetScheduleConditionAtTime节点的功能是什么?",
        "answer": "KfGetScheduleConditionAtTime节点是从给定时间点的调度中提取和处理条件数据，提供了一种无缝分析和利用该时刻调度状态的方法。"
    },
    {
        "question": "在ComfyUI中，如何提取指定时间的调度条件数据?",
        "answer": "在ComfyUI中，可以使用KfGetScheduleConditionAtTime节点来提取指定时间的调度条件数据，它用于分析和利用特定时刻的调度状态。"
    },
    {
        "question": "KfGetScheduleConditionAtTime节点的输入数据类型是什么?",
        "answer": "KfGetScheduleConditionAtTime节点的输入数据类型包括'schedule'（Comfy dtype: SCHEDULE, Python dtype: dict）和'time'（Comfy dtype: FLOAT, Python dtype: float）。"
    },
    {
        "question": "ComfyUI中的KfGetScheduleConditionAtTime节点如何识别评估调度的具体时间?",
        "answer": "ComfyUI中的KfGetScheduleConditionAtTime节点通过'time'输入参数识别评估调度的具体时间，它直接决定了将提取和处理哪组条件。"
    },
    {
        "question": "KfGetScheduleConditionAtTime节点的输出数据类型是什么?",
        "answer": "KfGetScheduleConditionAtTime节点的输出数据类型为'CONDITIONING'，在ComfyUI中的dtype表示为CONDITIONING，在Python中的dtype表示为tuple，提供了详细条件数据以反映指定时间调度的状态。"
    },
    {
        "question": "如何在ComfyUI中处理特定时间的条件数据?",
        "answer": "在ComfyUI中处理特定时间的条件数据，你需要运行KfGetScheduleConditionAtTime节点并将'schedule'和'time'作为输入参数，节点将会返回包含该时间条件数据的'CONDITIONING'类型的输出。"
    },
    {
        "question": "KfGetScheduleConditionAtTime节点能在哪种硬件上运行?",
        "answer": "根据ComfyUI的使用小贴士，KfGetScheduleConditionAtTime节点能够在CPU上运行，其'Infra type'为CPU。"
    }
]