[
    {
        "question": "What does the ToBinaryMask node do in ComfyUI?",
        "answer": "The ToBinaryMask node is designed to convert a given mask into a binary mask based on a specified threshold."
    },
    {
        "question": "In what category of ComfyUI nodes does the ToBinaryMask node belong?",
        "answer": "The ToBinaryMask node belongs to the 'ImpactPack/Operation' category in ComfyUI."
    },
    {
        "question": "What type of input does the 'mask' parameter of the ToBinaryMask node require?",
        "answer": "The 'mask' parameter of the ToBinaryMask node requires a 'MASK' input with a Comfy dtype of 'MASK' and a Python dtype of 'torch.Tensor'."
    },
    {
        "question": "What role does the 'threshold' input play in the ToBinaryMask node?",
        "answer": "The 'threshold' input in the ToBinaryMask node determines the cutoff value for converting the original mask into a binary format. Pixels with values above this threshold are considered as part of the mask."
    },
    {
        "question": "What is the output of the ToBinaryMask node and how is it represented?",
        "answer": "The output of the ToBinaryMask node is a binary mask, represented as a 'MASK' output with a Comfy dtype of 'MASK' and a Python dtype of 'torch.Tensor'."
    },
    {
        "question": "Which nodes are commonly used in conjunction with the ToBinaryMask node in ComfyUI?",
        "answer": "Commonly used nodes in conjunction with the ToBinaryMask node include the MaskToImage node and the MaskToSEGS node."
    },
    {
        "question": "What infrastructure type supports the ToBinaryMask node?",
        "answer": "The ToBinaryMask node is supported by the 'CPU' infrastructure type."
    }
]