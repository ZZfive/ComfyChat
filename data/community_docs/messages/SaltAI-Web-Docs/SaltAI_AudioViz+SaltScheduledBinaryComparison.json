[
    {
        "question": "What is the class name of the node that performs scheduled binary comparisons on a batch of images?",
        "answer": "The class name is `SaltScheduledBinaryComparison`."
    },
    {
        "question": "What category does the SaltScheduledBinaryComparison node fall under in ComfyUI?",
        "answer": "It falls under the category `SALT/Scheduling/Image`."
    },
    {
        "question": "What is the purpose of the SaltScheduledBinaryComparison node in ComfyUI?",
        "answer": "SaltScheduledBinaryComparison node performs scheduled binary comparisons on a batch of images, applying a thresholding operation that can consider a margin of error (epsilon) and dynamically adjusts the comparison threshold for each image in the batch."
    },
    {
        "question": "Which input must be provided for the SaltScheduledBinaryComparison to function?",
        "answer": "The SaltScheduledBinaryComparison requires the input of images."
    },
    {
        "question": "What type of data is accepted for the 'images' input in SaltScheduledBinaryComparison?",
        "answer": "The 'images' input accepts data of dtype `IMAGE` equivalent to the python dtype `torch.Tensor`."
    },
    {
        "question": "What role does the 'comparison_schedule' play in the SaltScheduledBinaryComparison?",
        "answer": "The 'comparison_schedule' input in SaltScheduledBinaryComparison serves as a schedule of comparison values to apply as thresholds for the binary comparison across the batch of images."
    },
    {
        "question": "How does the SaltScheduledBinaryComparison handle the 'epsilon_schedule' when comparing images?",
        "answer": "The 'epsilon_schedule' input allows for a margin of error in the comparison if enabled, accommodating slight variations in thresholding and ensuring near-threshold values can be considered as matches."
    }
]