[
    {
        "question": "What is ACN_ReferenceControlNetFinetune?",
        "answer": "ACN_ReferenceControlNetFinetune is a class in ComfyUI specializing in refining reference-based control mechanisms within neural networks."
    },
    {
        "question": "What category does ACN_ReferenceControlNetFinetune belong to?",
        "answer": "ACN_ReferenceControlNetFinetune belongs to the 'Adv-ControlNet üõÇüÖêüÖíüÖù/Reference' category in ComfyUI."
    },
    {
        "question": "What is the purpose of ACN_ReferenceControlNetFinetune?",
        "answer": "The purpose of ACN_ReferenceControlNetFinetune is to enhance the integration of attention and adaptive instance normalization techniques in neural networks, improving style fidelity and reference weighting."
    },
    {
        "question": "What are the required input types for ACN_ReferenceControlNetFinetune?",
        "answer": "The required input types for ACN_ReferenceControlNetFinetune include attn_style_fidelity, attn_ref_weight, attn_strength, adain_style_fidelity, adain_ref_weight, and adain_strength, all specified with Comfy dtype as FLOAT and Python dtype as float."
    },
    {
        "question": "What does the output node of ACN_ReferenceControlNetFinetune produce?",
        "answer": "The output node of ACN_ReferenceControlNetFinetune produces a CONTROL_NET object, which is a refined control network optimized for integrating reference-based control mechanisms such as attention and AdaIN."
    },
    {
        "question": "What is the Infra type recommended for using ACN_ReferenceControlNetFinetune?",
        "answer": "ACN_ReferenceControlNetFinetune is recommended to be used with GPU infrastructure."
    },
    {
        "question": "What function does ACN_ReferenceControlNetFinetune class provide?",
        "answer": "The ACN_ReferenceControlNetFinetune class provides the 'load_controlnet' function, which initializes a CONTROL_NET object with specified parameters for attention and AdaIN mechanisms."
    }
]