[
    {
        "question": "What is the purpose of the FileNamePrefix node in ComfyUI?",
        "answer": "The FileNamePrefix node in ComfyUI is designed to generate a prefix for filenames based on various conditions, allowing for dynamic filename customization by incorporating date formatting and custom text replacement to ensure structured and organized filenames according to user-defined parameters."
    },
    {
        "question": "What are the required input types for the FileNamePrefix node in ComfyUI?",
        "answer": "The required input types for the FileNamePrefix node in ComfyUI include `date`, `date_directory`, `custom_directory`, and `custom_text`. These inputs determine whether the current date and date-based directory should be included in the filename prefix, specify a custom directory path, and allow for the appending of custom text to the prefix."
    },
    {
        "question": "How is the date formatted when included in the filename prefix using the FileNamePrefix node?",
        "answer": "When the `date` input is set to 'true', the date is formatted in the pattern '%y%m%d%H%M%S' and appended to the filename prefix, ensuring time-stamped file organization."
    },
    {
        "question": "What role does the `date_directory` input have in the FileNamePrefix node operation?",
        "answer": "The `date_directory` input in the FileNamePrefix node, when set to 'true', causes the node to prepend a date-based directory to the filename prefix, aiding in chronological sorting of files by creating a folder structure based on the current date."
    },
    {
        "question": "How is the `custom_directory` input utilized by the FileNamePrefix node?",
        "answer": "The `custom_directory` input allows the user to specify a custom directory path that is dynamically generated and included in the filename prefix. This feature enables customized file organization within specific directories, providing more control over file system structure."
    },
    {
        "question": "In what way is custom text sanitized by the FileNamePrefix node before being appended to the filename prefix?",
        "answer": "Custom text, before being appended to the filename prefix by the FileNamePrefix node, undergoes sanitization to remove invalid filename characters by replacing them with an empty string. This process ensures that the appended custom text is compatible with file naming conventions and results in valid and organized filenames."
    },
    {
        "question": "What is the output type and dtype of the filename_prefix generated by the FileNamePrefix node?",
        "answer": "The output type of the filename_prefix generated by the FileNamePrefix node is `STRING` with a Comfy dtype of `STRING` and a Python dtype of `str`. This output represents the generated filename prefix, constructed based on the input parameters and conditions, and is sanitized and structured to ensure valid filenames."
    }
]