[
    {
        "question": "What is the purpose of the Make Resized Mask Batch node in SuperBeasts.AI?",
        "answer": "The Make Resized Mask Batch node in SuperBeasts.AI is designed to process and combine multiple individual masks or mask batches into a single, resized mask batch, ensuring uniformity across the batch and optionally reordering the masks based on a specified sequence."
    },
    {
        "question": "What are the required input types for the Make Resized Mask Batch node?",
        "answer": "The required input types for the Make Resized Mask Batch node are `width` and `height`, specifying the target dimensions for resizing the masks."
    },
    {
        "question": "Which node can be used to create a batch of resized masks from multiple individual masks?",
        "answer": "The Make Resized Mask Batch node in SuperBeasts.AI can be used to create a batch of resized masks from multiple individual masks."
    },
    {
        "question": "What is the output type of the Make Resized Mask Batch node?",
        "answer": "The output type of the Make Resized Mask Batch node is a single tensor representing a batch of resized masks, with the comfy dtype being `MASK` and the Python dtype being `torch.Tensor`."
    },
    {
        "question": "How many optional masks can be included in the Make Resized Mask Batch node?",
        "answer": "The Make Resized Mask Batch node allows up to 12 optional masks to be included in the batch, named `mask1` through `mask12`."
    },
    {
        "question": "What does the `width` and `height` parameter in the Make Resized Mask Batch node do?",
        "answer": "The `width` and `height` parameters in the Make Resized Mask Batch node specify the target dimensions for resizing the masks, ensuring they are uniform in size."
    },
    {
        "question": "On which device type does the Make Resized Mask Batch node primarily run?",
        "answer": "The Make Resized Mask Batch node primarily runs on the GPU."
    }
]