[
    {
        "question": "What is ConditioningZeroOut?",
        "answer": "ConditioningZeroOut is a custom node in ComfyUI designed for advanced conditioning operations. It zeroes out specific elements within the conditioning data structure, neutralizing their influence."
    },
    {
        "question": "What category does ConditioningZeroOut belong to?",
        "answer": "ConditioningZeroOut belongs to the 'advanced/conditioning' category within ComfyUI."
    },
    {
        "question": "What does ConditioningZeroOut do to the conditioning data structure?",
        "answer": "ConditioningZeroOut zeroes out the 'pooled_output' elements within each conditioning entry, if present, effectively neutralizing their influence."
    },
    {
        "question": "What are the input types required by ConditioningZeroOut?",
        "answer": "The input types required by ConditioningZeroOut include a conditioning data structure, which is of Comfy dtype 'CONDITIONING' and Python dtype 'List[Tuple[torch.Tensor, Dict[str, torch.Tensor]]]'."
    },
    {
        "question": "How does ConditioningZeroOut modify the conditioning data structure?",
        "answer": "ConditioningZeroOut modifies the conditioning data structure by setting 'pooled_output' elements to zero where applicable."
    },
    {
        "question": "What are the output types of ConditioningZeroOut?",
        "answer": "The output types of ConditioningZeroOut include a modified conditioning data structure, also of Comfy dtype 'CONDITIONING' and Python dtype 'List[Tuple[torch.Tensor, Dict[str, torch.Tensor]]]'."
    },
    {
        "question": "What are some common nodes used alongside ConditioningZeroOut?",
        "answer": "Common nodes used alongside ConditioningZeroOut include UltimateSDUpscale."
    }
]