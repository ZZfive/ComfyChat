[
    {
        "question": "What is the purpose of the SaltImageBlendingModes node in ComfyUI?",
        "answer": "The SaltImageBlendingModes node is designed for blending two sets of images together using a variety of blending modes, allowing for adjustment of blend percentages and application of masks to control the blending process."
    },
    {
        "question": "Which category does the SaltImageBlendingModes node belong to in ComfyUI?",
        "answer": "The SaltImageBlendingModes node belongs to the 'SALT/Image/Composite' category in ComfyUI."
    },
    {
        "question": "What are the mandatory inputs required for the SaltImageBlendingModes node?",
        "answer": "The mandatory inputs for the SaltImageBlendingModes node include 'images_a', 'images_b', 'mode', and 'blend_percentage'."
    },
    {
        "question": "How does the SaltImageBlendingModes node handle masks in the blending process?",
        "answer": "The SaltImageBlendingModes node allows for the optional application of masks to control where the blending occurs between the images, enhancing the precision or complexity of composite images."
    },
    {
        "question": "What data types does the SaltImageBlendingModes node use for 'images_a' and 'images_b' inputs?",
        "answer": "The SaltImageBlendingModes node uses the Comfy dtype 'IMAGE' and the Python dtype 'torch.Tensor' for both 'images_a' and 'images_b' inputs."
    },
    {
        "question": "What is the function of 'blend_percentage' in the SaltImageBlendingModes node?",
        "answer": "The 'blend_percentage' input in the SaltImageBlendingModes node determines the intensity of the blend between the two image sets, where a higher percentage results in a stronger presence of the overlay images."
    },
    {
        "question": "What do the 'images' output from the SaltImageBlendingModes node represent?",
        "answer": "The 'images' output from the SaltImageBlendingModes node represents the resulting set of blended images, with Comfy dtype 'IMAGE' and Python dtype 'torch.Tensor'."
    },
    {
        "question": "What are the blending modes available in the SaltImageBlendingModes node?",
        "answer": "The blending modes available in the SaltImageBlendingModes node include 'normal', 'color', 'color_burn', 'color_dodge', 'darken', 'difference', 'exclusion', 'hard_light', 'hue', 'lighten', 'multiply', 'overlay', 'screen', and 'soft_light'."
    },
    {
        "question": "On which infrastructure type is the SaltImageBlendingModes node optimized to run?",
        "answer": "The SaltImageBlendingModes node is optimized to run on 'GPU' infrastructure."
    }
]