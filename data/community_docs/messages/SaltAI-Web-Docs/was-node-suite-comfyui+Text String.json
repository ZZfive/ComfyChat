[
    {
        "question": "What is the `Text String` class designed for in ComfyUI?",
        "answer": "The `Text String` class in ComfyUI is designed to process and manipulate text strings, allowing for the parsing and optional combination of up to four separate text inputs into parsed text outputs."
    },
    {
        "question": "What does the `text` input of the `WAS_Text_String` node represent?",
        "answer": "The `text` input of the `WAS_Text_String` node represents the primary text input for processing. It undergoes token parsing to transform the text based on predefined tokens."
    },
    {
        "question": "How many optional text inputs does the `WAS_Text_String` node support?",
        "answer": "The `WAS_Text_String` node supports up to three optional text inputs, namely `text_b`, `text_c`, and `text_d`, each of which undergoes token parsing similar to the primary `text` input."
    },
    {
        "question": "What is the output type of the `WAS_Text_String` node and what does it consist of?",
        "answer": "The output type of the `WAS_Text_String` node is `STRING`, consisting of the processed versions of the primary and optional text inputs after token parsing, returned as separate outputs."
    },
    {
        "question": "What are the common nodes associated with the `Text String` node?",
        "answer": "A common node associated with the `Text String` node is `Text Concatenate`, which is often used in conjunction with text processing tasks in ComfyUI."
    },
    {
        "question": "What is the infra type of the `Text String` node?",
        "answer": "The infra type of the `Text String` node is `CPU`, indicating that its operations are executed on the CPU."
    },
    {
        "question": "Can the `WAS_Text_String` node handle multiline inputs?",
        "answer": "The `WAS_Text_String` node does not support multiline inputs by default as the `multiline` flag is set to `False` in its requirements."
    }
]