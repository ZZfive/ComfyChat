[
    {
        "question": "What is the class name for the node that performs remapping from inside parabolas?",
        "answer": "The class name for the node that performs remapping from inside parabolas is `RemapFromInsideParabolas`."
    },
    {
        "question": "In which category does the RemapFromInsideParabolas node fall under?",
        "answer": "The RemapFromInsideParabolas node falls under the category `Bmad/CV/Transform`."
    },
    {
        "question": "Is RemapFromInsideParabolas an output node?",
        "answer": "No, RemapFromInsideParabolas is not an output node."
    },
    {
        "question": "What is the purpose of the `src_mask_with_i_parabolas` input in the RemapFromInsideParabolas node?",
        "answer": "The `src_mask_with_i_parabolas` input in the RemapFromInsideParabolas node specifies the source mask containing two parabolas, which are used to define the transformation geometry for the image remapping."
    },
    {
        "question": "What are the comfy and python dtypes for the `width` input in the RemapFromInsideParabolas node?",
        "answer": "The comfy dtype for the `width` input in the RemapFromInsideParabolas node is `INT`, and the python dtype is `int`."
    },
    {
        "question": "What does the `remap` output represent in the RemapFromInsideParabolas node?",
        "answer": "The `remap` output in the RemapFromInsideParabolas node represents the result of the remapping operation, which is an image transformed to align with the specified parabolic contours and dimensions."
    },
    {
        "question": "What does the `src_mask_with_i_parabolas` input type represent in the RemapFromInsideParabolas node?",
        "answer": "The `src_mask_with_i_parabolas` input type in the RemapFromInsideParabolas node represents the source mask that contains two parabolas used to define the transformation geometry, with a comfy dtype of `MASK` and a python dtype of `numpy.ndarray`."
    }
]