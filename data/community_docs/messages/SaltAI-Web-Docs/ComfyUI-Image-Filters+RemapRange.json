[
    {
        "question": "What is the RemapRange node in ComfyUI used for?",
        "answer": "The RemapRange node in ComfyUI is a custom node used to adjust the intensity range of an image by remapping its black and white points, enhancing visual contrast or adjusting brightness and darkness levels."
    },
    {
        "question": "What parameters are required to adjust an image with the RemapRange node?",
        "answer": "The RemapRange node requires an input image of dtype `IMAGE` and two float parameters, blackpoint and whitepoint, which specify the lower and upper bounds of the intensity range."
    },
    {
        "question": "How does the RemapRange node adjust the output image's brightness and contrast?",
        "answer": "The RemapRange node adjusts the output image's brightness and contrast by remapping values below the blackpoint to black and values above the whitepoint to white, based on the specified black and white points."
    },
    {
        "question": "What is the function of the blackpoint parameter in the RemapRange node?",
        "answer": "The blackpoint parameter in the RemapRange node sets the lower bound of the intensity range to remap to black, influencing the image's contrast and brightness when values below this point are adjusted accordingly."
    },
    {
        "question": "What role does the whitepoint parameter play in the RemapRange processing?",
        "answer": "The whitepoint parameter in the RemapRange node determines the upper bound of the intensity range to remap to white, affecting the image's contrast and brightness levels by adjusting values above this point."
    },
    {
        "question": "Which category does the RemapRange node belong to in ComfyUI's node library?",
        "answer": "The RemapRange node belongs to the category 'image/filters' in ComfyUI's node library."
    },
    {
        "question": "Can the RemapRange node be run on which types of hardware?",
        "answer": "The RemapRange node can be run on 'GPU' hardware, as specified by the ComfyUI implementation."
    }
]