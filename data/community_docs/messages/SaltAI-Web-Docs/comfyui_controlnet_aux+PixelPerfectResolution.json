[
    {
        "question": "What is the purpose of the PixelPerfectResolution node in ComfyUI?",
        "answer": "The PixelPerfectResolution node in ComfyUI is designed to calculate the optimal resolution for resizing an image to achieve pixel-perfect clarity, considering the original and target dimensions along with the specified resizing mode."
    },
    {
        "question": "Which category does the PixelPerfectResolution node belong to in ComfyUI?",
        "answer": "The PixelPerfectResolution node belongs to the ControlNet Preprocessors category in ComfyUI."
    },
    {
        "question": "What input does the PixelPerfectResolution node require to determine the base dimensions before applying the resizing operation?",
        "answer": "The PixelPerfectResolution node requires the 'original_image' as input, which is crucial for determining the base dimensions before applying the resizing operation."
    },
    {
        "question": "How does the PixelPerfectResolution node calculate the final resolution based on the target width and height?",
        "answer": "The PixelPerfectResolution node calculates the final resolution by considering the 'image_gen_width' and 'image_gen_height', which influence the scaling factor and the final resolution calculation along with the specified resizing mode."
    },
    {
        "question": "What data types are used for 'original_image', 'image_gen_width', and 'image_gen_height' in the PixelPerfectResolution node?",
        "answer": "In the PixelPerfectResolution node, 'original_image' uses the data type IMAGE in Comfy and np.ndarray in Python, while 'image_gen_width' and 'image_gen_height' use the INT data type in Comfy and the int data type in Python."
    },
    {
        "question": "What determines the computed optimal resolution for resizing an image in the PixelPerfectResolution node?",
        "answer": "The computed optimal resolution for resizing an image in the PixelPerfectResolution node is determined by the output 'RESOLUTION (INT)', which ensures pixel-perfect clarity and is based on the input parameters and the specified resizing mode."
    },
    {
        "question": "Which resize mode directly impacts how the final resolution is computed in the PixelPerfectResolution node?",
        "answer": "The 'resize_mode' input in the PixelPerfectResolution node directly impacts how the final resolution is computed and must be specified as a resizing mode such as OUTER_FIT or INNER_FIT."
    }
]