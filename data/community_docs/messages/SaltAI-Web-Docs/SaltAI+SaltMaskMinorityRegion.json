[
    {
        "question": "What is the purpose of the SaltMaskMinorityRegion node in ComfyUI?",
        "answer": "The SaltMaskMinorityRegion node in ComfyUI is designed to identify and isolate minority regions within a given set of masks, applying a threshold to distinguish these areas."
    },
    {
        "question": "What is the category of the SaltMaskMinorityRegion node in ComfyUI?",
        "answer": "The SaltMaskMinorityRegion node falls under the category 'SALT/Masking/Filter' in ComfyUI."
    },
    {
        "question": "What determines which areas are considered minority regions by the SaltMaskMinorityRegion node?",
        "answer": "The threshold parameter in the SaltMaskMinorityRegion node determines the sensitivity of the minority region detection, influencing which areas are considered minority based on their pixel intensity."
    },
    {
        "question": "How is the 'masks' parameter used in the SaltMaskMinorityRegion node?",
        "answer": "The 'masks' parameter in the SaltMaskMinorityRegion node represents the collection of mask images to be processed, aiming to identify minority regions within each mask."
    },
    {
        "question": "What is the data type of the 'masks' input in the SaltMaskMinorityRegion node?",
        "answer": "The 'masks' input in the SaltMaskMinorityRegion node has a Comfy dtype of 'MASK' and a Python dtype of 'torch.Tensor'."
    },
    {
        "question": "What does the 'threshold' parameter control in the context of minority region detection?",
        "answer": "In the context of minority region detection, the 'threshold' parameter controls the sensitivity of identifying minority regions by determining which areas are considered minority based on their pixel intensity."
    },
    {
        "question": "What does the SaltMaskMinorityRegion node output and what is its data type?",
        "answer": "The SaltMaskMinorityRegion node outputs a tensor of masks, corresponding to the isolated minority region within the original input masks, with a Comfy dtype of 'MASK' and a Python dtype of 'torch.Tensor'."
    }
]