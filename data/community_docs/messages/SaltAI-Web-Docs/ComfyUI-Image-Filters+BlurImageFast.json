[
    {
        "question": "What is the purpose of the BlurImageFast node in ComfyUI?",
        "answer": "The BlurImageFast node in ComfyUI is designed to apply Gaussian blur to images efficiently by specifying the radius of the blur in both the x and y directions."
    },
    {
        "question": "What types of input does the BlurImageFast node require?",
        "answer": "The BlurImageFast node requires 'images' as the main input, which is a torch.Tensor representing the images to be blurred, and two integer parameters, 'radius_x' and 'radius_y', specifying the horizontal and vertical radii of the Gaussian blur."
    },
    {
        "question": "What determines the extent of blurring along the x-axis in the images using the BlurImageFast node?",
        "answer": "The extent of blurring along the x-axis is determined by the 'radius_x' parameter in the BlurImageFast node."
    },
    {
        "question": "Which parameter controls the vertical blurring effect in the BlurImageFast node?",
        "answer": "The 'radius_y' parameter controls the extent of blurring along the y-axis of the images in the BlurImageFast node."
    },
    {
        "question": "What does the 'images' parameter represent in the BlurImageFast node?",
        "answer": "The 'images' parameter in the BlurImageFast node represents the images to be blurred, specified as a torch.Tensor, on which the Gaussian blur effect will be applied."
    },
    {
        "question": "How does the BlurImageFast node handle image blurring if the sum of 'radius_x' and 'radius_y' is zero?",
        "answer": "If the sum of 'radius_x' and 'radius_y' is zero, the BlurImageFast node passes the images through unchanged without applying any Gaussian blur."
    },
    {
        "question": "What does the output of the BlurImageFast node consist of?",
        "answer": "The output of the BlurImageFast node is a blurred version of the input images, achieved through Gaussian blurring as specified by the 'radius_x' and 'radius_y' parameters, represented as a torch.Tensor."
    }
]