[
    {
        "question": "What does the JWImageResizeByLongerSide node do?",
        "answer": "The JWImageResizeByLongerSide node resizes an image by adjusting its longer side to a specified size while maintaining the aspect ratio."
    },
    {
        "question": "Which types of images can JWImageResizeByLongerSide handle?",
        "answer": "The JWImageResizeByLongerSide node can handle images with dtype `torch.Tensor` in ComfyUI."
    },
    {
        "question": "What is the dtype requirement for the `image` input in JWImageResizeByLongerSide?",
        "answer": "The `image` input in JWImageResizeByLongerSide must have Comfy dtype `IMAGE` and Python dtype `torch.Tensor`."
    },
    {
        "question": "What is the type of the `size` input required by JWImageResizeByLongerSide?",
        "answer": "The `size` input, specifying the target size for the longer side of the image, must be of type `INT` in ComfyUI and `int` in Python."
    },
    {
        "question": "What are the data types for the `interpolation_mode` input in JWImageResizeByLongerSide?",
        "answer": "The `interpolation_mode` input, determining the method used for interpolating pixels during resize, has Comfy dtype `COMBO[STRING]` and Python dtype `str`."
    },
    {
        "question": "What is the expected dtype of the output image from JWImageResizeByLongerSide?",
        "answer": "The output image from JWImageResizeByLongerSide has Comfy dtype `IMAGE` and Python dtype `torch.Tensor`."
    },
    {
        "question": "What kind of transformations can the JWImageResizeByLongerSide node apply to images?",
        "answer": "The JWImageResizeByLongerSide node applies resizing transformations to images, specifically adjusting the longer side to a specified size while maintaining the aspect ratio."
    },
    {
        "question": "In which category can you find the JWImageResizeByLongerSide node?",
        "answer": "The JWImageResizeByLongerSide node is categorized under `jamesWalker55` in ComfyUI."
    }
]