[
    {
        "question": "What is MaskComposite in ComfyUI?",
        "answer": "MaskComposite is a class in ComfyUI categorized under 'mask' that combines two mask inputs through operations like addition, subtraction, and logical operations to create a modified mask."
    },
    {
        "question": "What are the input types required for MaskComposite?",
        "answer": "The required input types for MaskComposite include 'destination' and 'source' masks of type 'MASK', horizontal and vertical offsets 'x' and 'y' of type 'INT', and an operation type 'operation' which can be 'multiply', 'add', 'subtract', 'and', 'or', or 'xor'."
    },
    {
        "question": "How does MaskComposite handle mask data manipulation?",
        "answer": "MaskComposite abstractly handles mask data manipulation by performing specified operations between a destination mask and a source mask, influencing the resulting mask based on the operation type."
    },
    {
        "question": "What does the MaskComposite output represent?",
        "answer": "The output of MaskComposite represents a composite mask resulting from the specified operation applied between the destination and source masks."
    },
    {
        "question": "What are some common nodes associated with MaskComposite?",
        "answer": "Common nodes associated with MaskComposite include ToBinaryMask, LatentCompositeMasked, and MaskToImage."
    },
    {
        "question": "How does the MaskComposite class define its input types?",
        "answer": "The MaskComposite class defines its input types using a class method INPUT_TYPES(), specifying the required types and constraints for inputs like 'destination', 'source', 'x', 'y', and 'operation'."
    },
    {
        "question": "What are some tips for using MaskComposite?",
        "answer": "For optimal usage, MaskComposite operates effectively on CPU infrastructure and supports operations like 'multiply', 'add', 'subtract', 'and', 'or', and 'xor' between masks."
    }
]