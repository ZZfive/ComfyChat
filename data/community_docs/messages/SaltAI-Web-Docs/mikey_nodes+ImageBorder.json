[
    {
        "question": "What is the ImageBorder node in ComfyUI used for?",
        "answer": "The ImageBorder node in ComfyUI is used to add a decorative or functional border around an image, supporting various styles including checkerboard patterns, blurred edges, and solid colors."
    },
    {
        "question": "What are the required input types for the ImageBorder node?",
        "answer": "The required input types for the ImageBorder node include an `image` (Comfy dtype: `IMAGE`, Python dtype: `torch.Tensor`), `border_width` (Comfy dtype: `INT`, Python dtype: `int`), and `border_color` (Comfy dtype: `STRING`, Python dtype: `str`)."
    },
    {
        "question": "What kind of borders can be created by the ImageBorder node in ComfyUI?",
        "answer": "The ImageBorder node in ComfyUI can create borders with various styles, such as checkerboard patterns, blurred edges, and solid colors."
    },
    {
        "question": "What does the `border_color` parameter specify in the ImageBorder node?",
        "answer": "The `border_color` parameter in the ImageBorder node determines the color or style of the border, including solid colors, checkerboard patterns, or blurred effects."
    },
    {
        "question": "How does the ImageBorder node modify the input image?",
        "answer": "The ImageBorder node modifies the input image by adding a border with the specified width and color, which could include special styles like blurring or checkerboard patterns, enhancing the visual appearance of the image."
    },
    {
        "question": "What is the purpose of the `blur_border` method in the ImageBorder node's source code?",
        "answer": "The `blur_border` method in the ImageBorder node's source code is used to create a blurred border by enlarging the image, applying a Gaussian blur, and then pasting the original image inside to ensure the border has similar colors to the image edges."
    },
    {
        "question": "What output does the ImageBorder node provide?",
        "answer": "The ImageBorder node outputs a modified `image` that includes the original content with the added border, with the Comfy dtype `IMAGE` and Python dtype `torch.Tensor`."
    }
]