[
    {
        "question": "What is the class name for the node that processes and applies OpenPose settings to input data?",
        "answer": "The class name is `CtrlNet OpenPose Pipe (JPS)`, which is used to facilitate the configuration and application of OpenPose parameters for pose estimation tasks."
    },
    {
        "question": "What is the main function of the CtrlNet OpenPose Pipe (JPS) node?",
        "answer": "The CtrlNet OpenPose Pipe (JPS) node is designed to process and apply OpenPose settings to input data, making it easier to integrate pose estimation into workflows."
    },
    {
        "question": "What node category does the CtrlNet OpenPose Pipe (JPS) belong to?",
        "answer": "The CtrlNet OpenPose Pipe (JPS) belongs to the `JPS Nodes/Pipes` category."
    },
    {
        "question": "Which input type is required by the CtrlNet OpenPose Pipe (JPS) node?",
        "answer": "The CtrlNet OpenPose Pipe (JPS) node requires the `openpose_settings` input type, which specifies the configuration settings for the OpenPose algorithm."
    },
    {
        "question": "What are the outputs of the CtrlNet OpenPose Pipe (JPS) node?",
        "answer": "The outputs of the CtrlNet OpenPose Pipe (JPS) node include `openpose_source`, `openpose_strength`, `openpose_start`, `openpose_end`, `openpose_body`, `openpose_face`, and `openpose_hand`, each representing specific parameters of OpenPose processing."
    },
    {
        "question": "What is the data type of the `openpose_settings` input required by the CtrlNet OpenPose Pipe (JPS) node?",
        "answer": "The `openpose_settings` input required by the CtrlNet OpenPose Pipe (JPS) node has a Comfy dtype of `BASIC_PIPE` and a Python dtype of `Tuple[int, float, float, float, str, str, str]`."
    },
    {
        "question": "In which hardware type is the CtrlNet OpenPose Pipe (JPS) node optimized to run?",
        "answer": "The CtrlNet OpenPose Pipe (JPS) node is optimized to run on `CPU`, according to its infra type."
    }
]