[
    {
        "question": "What is the purpose of the ExifReader contribution guidelines?",
        "answer": "The ExifReader contribution guidelines provide information on how to contribute to the project, including creating issues and pull requests, to help improve the project."
    },
    {
        "question": "What should be included when reporting bugs in ExifReader?",
        "answer": "When reporting bugs in ExifReader, please include a description of the issue and how to reproduce it according to the issue template, and an example JPEG image where the problem can be seen, if possible."
    },
    {
        "question": "What should code changes in a pull request for ExifReader follow?",
        "answer": "Code changes in a pull request for ExifReader should follow the ESLint rules and be covered by unit tests."
    },
    {
        "question": "How can you test code changes for ExifReader?",
        "answer": "You can test code changes for ExifReader by running the linter with 'npm run lint' and running tests with 'npm test' after 'npm install' has been run."
    },
    {
        "question": "What testing frameworks are used for ExifReader?",
        "answer": "ExifReader uses Mocha and Chai for testing."
    },
    {
        "question": "How can you check test code coverage for ExifReader?",
        "answer": "You can check test code coverage for ExifReader by running 'npm run coverage', which will create a report in the terminal and a more visual HTML version of the report."
    },
    {
        "question": "What should be included in a commit message for ExifReader?",
        "answer": "A commit message for ExifReader should include a descriptive subject line written in imperative mood, using no more than 50 characters with 72 as a hard limit, and a body explaining what was changed and why for non-trivial changes, with lines wrapped at 72 characters."
    }
]