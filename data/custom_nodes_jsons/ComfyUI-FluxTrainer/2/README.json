[
    {
        "question": "What is the purpose of the ComfyUI-FluxTrainer repository?",
        "answer": "The ComfyUI-FluxTrainer repository provides custom nodes for training LoRA and full models using the FLUX model in the ComfyUI interface."
    },
    {
        "question": "What is the author's experience level in training models?",
        "answer": "The author has very little previous experience in training models, with their only prior experience being training AnimateDiff Motion Loras and building similar training nodes for it."
    },
    {
        "question": "Where should users direct questions related to training?",
        "answer": "Users should direct questions related to training to kohya's repository, as the ComfyUI-FluxTrainer repository is not for raising such questions."
    },
    {
        "question": "What is the current state of the ComfyUI-FluxTrainer nodes and the underlying implementation by kohya?",
        "answer": "Both the ComfyUI-FluxTrainer nodes and the underlying implementation by kohya are experimental, a work in progress, and expected to change."
    },
    {
        "question": "What are the installation steps for the ComfyUI-FluxTrainer?",
        "answer": "To install ComfyUI-FluxTrainer, clone the repository into the 'custom_nodes' folder and install dependencies using 'pip install -r requirements.txt' or the provided command for portable installations."
    },
    {
        "question": "What additional nodes are utilized in the example workflow for LoRA training?",
        "answer": "The example workflow for LoRA training utilizes additional nodes from the ComfyUI-KJNodes repository and optional debugging nodes from the rgthree-comfy repository."
    },
    {
        "question": "What model versions are required for LoRA training and full model training in ComfyUI-FluxTrainer?",
        "answer": "For LoRA training, the normal fp8 or fp16 versions of the models need to be used, along with the non-diffusers version of the VAE. For full model training, the fp16 version of the main model is required."
    },
    {
        "question": "What are the benefits of training in ComfyUI?",
        "answer": "The benefits of training in ComfyUI include a familiar UI for Comfy users, the ability to use the same models for inference and training, compatibility with the same Python environment, and the ability to build workflows for comparing settings."
    }
]