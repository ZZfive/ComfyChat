[
    {
        "question": "What is ComfyUI-Mosaica used for?",
        "answer": "ComfyUI-Mosaica is used to create colorful mosaic images by computing label images and applying lookup tables."
    },
    {
        "question": "How does K-Means work in ComfyUI-Mosaica?",
        "answer": "K-Means in ComfyUI-Mosaica generates an image using a stable diffusion model and applies the k-means clustering algorithm from scikit-learn. The average color of each cluster is then applied to the image's labels, creating a colorized image."
    },
    {
        "question": "What are the benefits of using Mean Shift over K-Means?",
        "answer": "Mean Shift is slower than K-Means, especially for images greater than 512x512. However, it does not require specifying the number of clusters, which is an advantage."
    },
    {
        "question": "What is the purpose of the Watershed node in ComfyUI-Mosaica?",
        "answer": "The Watershed node in ComfyUI-Mosaica uses the watershed segmentation algorithm to convert an image into a label image. It is useful when the image has a lot of intensity variation and does not account for the hue of the original image."
    },
    {
        "question": "How is an image colorized in ComfyUI-Mosaica?",
        "answer": "An image can be colorized in ComfyUI-Mosaica by applying a lookup table (LUT) to the label image obtained from clustering algorithms like mean shift. This can be done either using a randomly generated LUT or by loading a LUT from Matplotlib."
    },
    {
        "question": "What is the purpose of applying an img2img with light denoising to a colorized label image?",
        "answer": "Applying an img2img with light denoising to a colorized label image in ComfyUI-Mosaica is done to refine the colorization and make it appear more natural, blending the colors of the label image with the content of the generated image."
    },
    {
        "question": "What nodes are available in ComfyUI-Mosaica?",
        "answer": "In ComfyUI-Mosaica, nodes are available for various tasks. These include applying the Mean Shift clustering algorithm to an image (Mean Shift), converting a label image into an RGB image by applying a LUT (Apply LUT To Label Image), generating a random LUT of RGB colors (Random LUT), and loading an RGB LUT from Matplotlib (Load LUT From Matplotlib)."
    }
]