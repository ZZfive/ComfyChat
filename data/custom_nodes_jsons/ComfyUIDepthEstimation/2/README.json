[
    {
        "question": "What is ComfyUIDepthEstimation?",
        "answer": "ComfyUIDepthEstimation is a custom depth estimation node for ComfyUI, using transformer models to integrate depth estimation with automatic gamma correction, contrast adjustment, and edge detection."
    },
    {
        "question": "What is the purpose of ComfyUIDepthEstimation?",
        "answer": "The purpose of ComfyUIDepthEstimation is to provide a custom depth estimation node for ComfyUI that includes depth estimation, automatic gamma correction, contrast adjustment, and edge detection."
    },
    {
        "question": "What are the features of ComfyUIDepthEstimation?",
        "answer": "The features of ComfyUIDepthEstimation include depth estimation using a transformer model, automatic gamma correction, automatic contrast adjustment, and edge detection and blurring."
    },
    {
        "question": "How can ComfyUIDepthEstimation be integrated with ComfyUI?",
        "answer": "ComfyUIDepthEstimation can be integrated with ComfyUI by copying the `depth_estimation_node.py` file to the custom nodes directory and updating the ComfyUI configuration to include the custom node if necessary."
    },
    {
        "question": "What are the necessary parameters for using ComfyUIDepthEstimation?",
        "answer": "The necessary parameters for using ComfyUIDepthEstimation include the `image_path` (path to the input image), `output_path` (path to save the processed image), `blur_radius` (radius for Gaussian Blur), `median_size` (size for Median Filter), and `device` (device to use for inference, either cpu or gpu)."
    },
    {
        "question": "How can the license of ComfyUIDepthEstimation be described?",
        "answer": "The license of ComfyUIDepthEstimation can be described as being licensed under the Apache License."
    },
    {
        "question": "What repository is used in ComfyUIDepthEstimation?",
        "answer": "ComfyUIDepthEstimation uses transformer models from the [TransformDepth](https://github.com/Limbicnation/TransformDepth) repository for depth estimation."
    }
]