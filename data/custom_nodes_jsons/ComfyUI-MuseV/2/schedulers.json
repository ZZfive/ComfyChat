[
    {
        "question": "스케줄러는 diffusion 시스템의 어떤 프로세스를 정의하나요?",
        "answer": "스케줄러는 diffusion 시스템의 전반적인 디노이징 프로세스를 정의합니다. 예를 들어 디노이징 스텝의 개수, 확률적인 혹은 확정적인 방식, 그리고 디노이징 된 샘플을 찾아내기 위해 어떤 알고리즘을 사용할지 등을 결정합니다."
    },
    {
        "question": "스케줄러를 직접 사용하여 생성되는 이미지를 눈으로 확인하는 접근법은 왜 추천되나요?",
        "answer": "주어진 파이프라인에 어떤 스케줄러가 가장 적합한지를 정량적으로 판단하는 것은 매우 어려운 일이기 때문에, 스케줄러를 직접 사용하여 생성되는 이미지를 눈으로 확인하며 정성적으로 성능을 판단해보는 것이 추천됩니다."
    },
    {
        "question": "파이프라인의 스케줄러에 접근하려면 어떤 속성을 사용해야 하나요?",
        "answer": "파이프라인의 스케줄러에 접근하기 위해서는 일반적으로 파이프라인 인스턴스 내에 'scheduler'라는 이름의 속성을 사용하면 됩니다."
    },
    {
        "question": "스케줄러의 호환성을 확인하기 위해 어떤 속성을 참고해야 하나요?",
        "answer": "스케줄러의 호환성을 확인하기 위해서는 각 스케줄러가 가지고 있는 'SchedulerMixin.compatibles' 속성을 참고해야 합니다."
    },
    {
        "question": "파이프라인의 스케줄러를 변경하려면 어떤 메서드를 사용해야 하나요?",
        "answer": "파이프라인의 스케줄러를 변경하기 위해서는 'ConfigMixin.from_config' 메서드를 사용하면 됩니다. 이를 사용하면 기존 스케줄러가 가지고 있는 설정을 새로운 스케줄러에 적용할 수 있습니다."
    },
    {
        "question": "DPMSolverMultistepScheduler는 몇 번의 스텝만으로 실행될 수 있나요?",
        "answer": "DPMSolverMultistepScheduler는 20번 정도의 스텝만으로 실행될 수 있습니다."
    },
    {
        "question": "Flax 사용자 중 Stable Diffusion 파이프라인과 호환되지 않는 스케줄러는 무엇인가요?",
        "answer": "Flax 사용자에게는 FlaxLMSDiscreteScheduler와 FlaxDDPMScheduler가 아직 Flax Stable Diffusion 파이프라인과 호환되지 않습니다."
    }
]