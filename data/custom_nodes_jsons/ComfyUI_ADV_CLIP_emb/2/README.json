[
    {
        "question": "What is the purpose of the ComfyUI_ADV_CLIP_emb repository?",
        "answer": "The ComfyUI_ADV_CLIP_emb repository contains 4 nodes for ComfyUI that allow for more control over the way prompt weighting should be interpreted."
    },
    {
        "question": "What are the two main settings available in the BNK_CLIPTextEncodeAdvanced node?",
        "answer": "The two main settings in the BNK_CLIPTextEncodeAdvanced node are token_normalization and weight_interpretation."
    },
    {
        "question": "What are the options for token_normalization setting in the BNK_CLIPTextEncodeAdvanced node?",
        "answer": "The options for token_normalization setting are: none, mean, length, and length+mean."
    },
    {
        "question": "What are the options for weight_interpretation setting in the BNK_CLIPTextEncodeAdvanced node?",
        "answer": "The options for weight_interpretation setting are: comfy, A1111, compel, comfy++, and down_weight."
    },
    {
        "question": "How does the BNK_CLIPTextEncodeSDXLAdvanced node differ from the BNK_CLIPTextEncodeAdvanced node?",
        "answer": "The BNK_CLIPTextEncodeSDXLAdvanced node provides the same settings as its non SDXL version, but also has two text fields to send different texts to the two CLIP models and a balance setting to tradeoff between the CLIP and openCLIP models."
    },
    {
        "question": "What parameters does the BNK_AddCLIPSDXLParams node add to a conditioning?",
        "answer": "The BNK_AddCLIPSDXLParams node adds the following SDXL parameters to a conditioning: width, height, crop_w, crop_h, target_width, and target_height."
    },
    {
        "question": "What parameters does the BNK_AddCLIPSDXLRParams node add to a conditioning?",
        "answer": "The BNK_AddCLIPSDXLRParams node adds the following refiner parameters to a conditioning: width, height, and ascore."
    }
]