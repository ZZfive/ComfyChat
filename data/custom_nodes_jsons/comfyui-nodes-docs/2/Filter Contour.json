[
    {
        "question": "What is the purpose of the Filter Contour node in ComfyUI?",
        "answer": "The Filter Contour node in ComfyUI is designed to process and filter contours based on a given fitness function and selection criteria. It allows for dynamic evaluation and selection of contours in an image, using custom logic to determine the most suitable contours for further processing or analysis."
    },
    {
        "question": "What are the required input types for the Filter Contour node?",
        "answer": "The required input types for the Filter Contour node are 'contours', which is the collection of contours to be filtered, 'fitness', which is the custom fitness function used to evaluate each contour, and 'select', which is the criteria used to select contours after they have been evaluated by the fitness function."
    },
    {
        "question": "What optional inputs can be used with the Filter Contour node?",
        "answer": "The Filter Contour node accepts two optional inputs: 'image', which is an image parameter that can be used in the fitness function for contour evaluation, and 'aux_contour', which is an auxiliary contour that can be used for comparative analysis in the fitness function."
    },
    {
        "question": "What output types does the Filter Contour node produce?",
        "answer": "The Filter Contour node produces two output types: 'cv_contour', which is the primary output containing a single contour selected based on the provided fitness function and selection criteria, and 'cv_contours', which is a secondary output containing all contours that were evaluated and possibly filtered based on the fitness function and selection criteria, including the primary selected contour."
    },
    {
        "question": "How does the Filter Contour node determine which contours to output?",
        "answer": "The Filter Contour node uses a fitness function to evaluate each contour, and then applies the selection criteria specified in the 'select' parameter to determine which contours to output. The return modes available for selection are 'MAX', 'MIN', 'MODE', and 'FILTER', each of which applies a different logic to select the output contours based on their fitness scores."
    },
    {
        "question": "What infra type does the Filter Contour node use?",
        "answer": "The Filter Contour node uses the 'CPU' infra type."
    },
    {
        "question": "What is the source code of the Filter Contour node?",
        "answer": "The source code of the Filter Contour node is a Python class named 'FilterContour' that defines methods for processing and filtering contours based on fitness functions and selection criteria. It includes input and output type definitions, a 'filter' function that performs the contour filtering, and utility functions for contour analysis and manipulation."
    }
]