[
    {
        "question": "What is the purpose of the InnerShadowV2 custom node in ComfyUI?",
        "answer": "The InnerShadowV2 custom node in ComfyUI is used to generate an inner shadow effect on an image."
    },
    {
        "question": "What are the required input types for the InnerShadowV2 custom node?",
        "answer": "The required input types for the InnerShadowV2 custom node are background_image, layer_image, invert_mask, blend_mode, opacity, distance_x, distance_y, grow, blur, and shadow_color."
    },
    {
        "question": "What does the invert_mask parameter do in the InnerShadowV2 custom node?",
        "answer": "The invert_mask parameter in the InnerShadowV2 custom node is used to invert the mask."
    },
    {
        "question": "What are the available blend modes in the InnerShadowV2 custom node?",
        "answer": "The available blend modes in the InnerShadowV2 custom node are screen, linear dodge(add), color dodge, lighten, dodge, hard light, linear light, normal, multply, subtract, difference, darker, color_burn, linear_burn, overlay, soft_light, vivid_light, pin_light, and hard_mix."
    },
    {
        "question": "What is the purpose of the distance_x and distance_y parameters in the InnerShadowV2 custom node?",
        "answer": "The distance_x and distance_y parameters in the InnerShadowV2 custom node are used to specify the pixel offset on the X and Y axis respectively."
    },
    {
        "question": "What does the grow parameter do in the InnerShadowV2 custom node?",
        "answer": "The grow parameter in the InnerShadowV2 custom node is used to specify the expansion of the shadow."
    },
    {
        "question": "What is the output type of the InnerShadowV2 custom node?",
        "answer": "The output type of the InnerShadowV2 custom node is an IMAGE, which represents the final processed image."
    },
    {
        "question": "Does the InnerShadowV2 custom node support layer masks?",
        "answer": "Yes, the InnerShadowV2 custom node supports an optional layer_mask input, which is a torch.Tensor representing the layer mask."
    }
]