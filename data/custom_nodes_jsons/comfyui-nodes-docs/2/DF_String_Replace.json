[
    {
        "question": "What is the purpose of the DF_String_Replace node in ComfyUI?",
        "answer": "The DF_String_Replace node is designed to modify strings by replacing a specified pattern with a new substring. It supports both strict replacement and regex-based modification."
    },
    {
        "question": "What are the required input parameters for the DF_String_Replace node?",
        "answer": "The required input parameters for the DF_String_Replace node are: Text (the input text to be processed), Pattern (the pattern to search for in the input text), Replace_With (the substring to replace the found pattern), and Mode (determines the pattern matching method, either 'Strict' for exact match or 'RegEx' for regular expression match)."
    },
    {
        "question": "What is the output of the DF_String_Replace node?",
        "answer": "The output of the DF_String_Replace node is the modified text after the specified pattern has been replaced."
    },
    {
        "question": "What are the two modes available for pattern matching in the DF_String_Replace node?",
        "answer": "The two modes available for pattern matching in the DF_String_Replace node are 'Strict' for exact matching and 'RegEx' for regular expression matching."
    },
    {
        "question": "What is the infra type of the DF_String_Replace node?",
        "answer": "The infra type of the DF_String_Replace node is CPU."
    },
    {
        "question": "What is the return type of the DF_String_Replace node?",
        "answer": "The return type of the DF_String_Replace node is STRING."
    },
    {
        "question": "How does the DF_String_Replace node handle the replacement in 'Strict' mode?",
        "answer": "In 'Strict' mode, the DF_String_Replace node replaces the pattern in the input text using the Python string replace() method."
    },
    {
        "question": "How does the DF_String_Replace node handle the replacement in 'RegEx' mode?",
        "answer": "In 'RegEx' mode, the DF_String_Replace node replaces the pattern in the input text using the Python re.sub() function for regular expression substitution."
    }
]