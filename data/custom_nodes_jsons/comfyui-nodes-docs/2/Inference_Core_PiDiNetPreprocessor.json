[
    {
        "question": "Inference_Core_PiDiNetPreprocessor 节点的主要作用是什么？",
        "answer": "Inference_Core_PiDiNetPreprocessor 节点的主要作用是利用 PiDiNet 模型预处理图像以提取软边缘线条，实现增强线条检测。"
    },
    {
        "question": "Inference_Core_PiDiNetPreprocessor 节点支持哪些必需的输入类型?",
        "answer": "Inference_Core_PiDiNetPreprocessor 节点支持的一个必需输入类型是 'image'，它是需要进行线条提取处理的输入图像，类型为 torch.Tensor。"
    },
    {
        "question": "Inference_Core_PiDiNetPreprocessor 节点支持哪些可选的输入类型？",
        "answer": "Inference_Core_PiDiNetPreprocessor 节点支持的可选输入类型包括 'safe' 和 'resolution'。'safe' 是一种启用或禁用图像处理过程中安全检查的模式，'resolution' 是处理前将输入图像调整到的分辨率。"
    },
    {
        "question": "Inference_Core_PiDiNetPreprocessor 节点的输出类型是什么？",
        "answer": "Inference_Core_PiDiNetPreprocessor 节点的输出类型是 'image'，它是经过处理的图像，展示了提取的线条，突显了 PiDiNet 模型在增强线条检测方面的能力。"
    },
    {
        "question": "Inference_Core_PiDiNetPreprocessor 节点的基础设施类型是什么？",
        "answer": "Inference_Core_PiDiNetPreprocessor 节点的基础设施类型是 'GPU'。"
    },
    {
        "question": "Inference_Core_PiDiNetPreprocessor 节点属于哪个类别？",
        "answer": "Inference_Core_PiDiNetPreprocessor 节点属于 'ControlNet Preprocessors/Line Extractors' 类别。"
    },
    {
        "question": "执行 Inference_Core_PiDiNetPreprocessor 节点的主要步骤是什么？",
        "answer": "执行 Inference_Core_PiDiNetPreprocessor 节点的主要步骤包括加载 PiDiNet 模型，调用 common_annotator_call 函数对输入图像进行处理，最后返回处理后的图像。"
    }
]