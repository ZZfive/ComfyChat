[
    {
        "question": "What is the purpose of the ImageTransformResizeRelative node in ComfyUI?",
        "answer": "The ImageTransformResizeRelative node dynamically adjusts the image size through relative scale factors, allowing for flexible image transformations while maintaining the aspect ratio."
    },
    {
        "question": "What are the required input types for the ImageTransformResizeRelative node?",
        "answer": "The required input types for the ImageTransformResizeRelative node are: images (Comfy dtype: IMAGE, Python dtype: torch.Tensor), scale_width (Comfy dtype: FLOAT, Python dtype: float), scale_height (Comfy dtype: FLOAT, Python dtype: float), and method (Comfy dtype: COMBO[STRING], Python dtype: str)."
    },
    {
        "question": "How does the scale_width input affect the output image?",
        "answer": "The scale_width input determines the scaling ratio of the image width, influencing the overall dimensions of the output image."
    },
    {
        "question": "What does the method input specify in the ImageTransformResizeRelative node?",
        "answer": "The method input specifies the interpolation method used for resizing, affecting the quality and characteristics of the resized image."
    },
    {
        "question": "What is the output type of the ImageTransformResizeRelative node?",
        "answer": "The output type of the ImageTransformResizeRelative node is an image (Comfy dtype: IMAGE, Python dtype: torch.Tensor) that has been resized according to the specified relative scale factors for width and height."
    },
    {
        "question": "Which infra type is commonly used for the ImageTransformResizeRelative node?",
        "answer": "The ImageTransformResizeRelative node commonly uses the GPU infra type."
    },
    {
        "question": "How does the ImageTransformResizeRelative node calculate the new width and height of the image?",
        "answer": "The ImageTransformResizeRelative node calculates the new width and height by multiplying the original width and height with the respective scale_width and scale_height input values."
    }
]