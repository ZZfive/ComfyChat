[
    {
        "question": "What is the purpose of BiRefNetUltra in ComfyUI?",
        "answer": "BiRefNetUltra is a custom node in ComfyUI that uses the BiRefNet model to remove the background of an image. It has better recognition capabilities and ultra-high edge details."
    },
    {
        "question": "What are the input types required for BiRefNetUltra?",
        "answer": "The required input types for BiRefNetUltra are: image (Comfy dtype: IMAGE, Python dtype: torch.Tensor), detail_method (Comfy dtype: STRING, Python dtype: str), detail_erode (Comfy dtype: INT, Python dtype: int), detail_dilate (Comfy dtype: INT, Python dtype: int), black_point (Comfy dtype: FLOAT, Python dtype: float), white_point (Comfy dtype: FLOAT, Python dtype: float), and process_detail (Comfy dtype: BOOLEAN, Python dtype: bool)."
    },
    {
        "question": "What does the detail_erode parameter control in BiRefNetUltra?",
        "answer": "The detail_erode parameter in BiRefNetUltra controls the range of the mask edge erosion. The larger the value, the greater the range of inward repair."
    },
    {
        "question": "What does the detail_dilate parameter control in BiRefNetUltra?",
        "answer": "The detail_dilate parameter in BiRefNetUltra controls the range of the mask edge dilation. The larger the value, the greater the range of outward repair."
    },
    {
        "question": "What does the black_point parameter control in BiRefNetUltra?",
        "answer": "The black_point parameter in BiRefNetUltra controls the threshold of black points in the mask. The smaller the value, the more black points."
    },
    {
        "question": "What does the white_point parameter control in BiRefNetUltra?",
        "answer": "The white_point parameter in BiRefNetUltra controls the threshold of white points in the mask. The larger the value, the more white points."
    },
    {
        "question": "What are the output types of BiRefNetUltra?",
        "answer": "The output types of BiRefNetUltra are: image (Comfy dtype: IMAGE, Python dtype: torch.Tensor) and mask (Comfy dtype: MASK, Python dtype: torch.Tensor)."
    },
    {
        "question": "What happens if process_detail is set to False in BiRefNetUltra?",
        "answer": "If process_detail is set to False in BiRefNetUltra, the original mask will be output directly, skipping the edge processing to save running time."
    }
]