[
    {
        "question": "What is the purpose of the CannyEdgePreprocessor node in ComfyUI?",
        "answer": "The CannyEdgePreprocessor node is used for edge detection in images using the Canny algorithm. It preprocesses images by applying the Canny edge detector to highlight edges, making them suitable for further image processing or analysis tasks."
    },
    {
        "question": "What is the required input type for the CannyEdgePreprocessor node?",
        "answer": "The required input type for the CannyEdgePreprocessor node is 'image', which is the input image that will be processed for edge detection using the Canny algorithm."
    },
    {
        "question": "What are the optional input parameters for the CannyEdgePreprocessor node?",
        "answer": "The optional input parameters for the CannyEdgePreprocessor node are 'low_threshold', 'high_threshold', and 'resolution'."
    },
    {
        "question": "What does the 'low_threshold' parameter do in the CannyEdgePreprocessor node?",
        "answer": "The 'low_threshold' parameter sets the lower limit for the hysteresis thresholding step in the Canny edge detection algorithm. It helps identify weak edges in the image."
    },
    {
        "question": "What does the 'high_threshold' parameter do in the CannyEdgePreprocessor node?",
        "answer": "The 'high_threshold' parameter sets the upper limit for the hysteresis thresholding step in the Canny edge detection algorithm. It is crucial for distinguishing strong edges in the image."
    },
    {
        "question": "What does the 'resolution' parameter specify in the CannyEdgePreprocessor node?",
        "answer": "The 'resolution' parameter specifies the resolution to which the input image will be resized before applying the Canny edge detection algorithm."
    },
    {
        "question": "What is the output type of the CannyEdgePreprocessor node?",
        "answer": "The output type of the CannyEdgePreprocessor node is 'image', which is an image with highlighted edges using the Canny edge detection algorithm."
    }
]