[
    {
        "question": "What is the purpose of the ExtendMaskList node in ComfyUI?",
        "answer": "The ExtendMaskList node is designed to extend the mask list, allowing multiple mask elements to be aggregated into a single comprehensive list. This functionality is crucial for operations that require simultaneous manipulation or analysis of multiple masks, providing a streamlined method for batch processing of mask data."
    },
    {
        "question": "What is the role of the 'inputs_len' parameter in the ExtendMaskList node?",
        "answer": "The 'inputs_len' parameter represents the collection of mask elements to be extended. It plays a key role in the node's operation, serving as the primary data input. The node subsequently processes these inputs to generate the extended mask list."
    },
    {
        "question": "What is the data type of 'inputs_len' in ComfyUI and Python respectively?",
        "answer": "In ComfyUI, the data type of 'inputs_len' is INT. In Python, it is List[torch.Tensor]."
    },
    {
        "question": "What does the output of the ExtendMaskList node represent?",
        "answer": "The output of the ExtendMaskList node is an extended list of mask elements, consolidated into a single entity for further processing or analysis."
    },
    {
        "question": "What is the data type of the output 'mask' in ComfyUI and Python respectively?",
        "answer": "In ComfyUI, the data type of the output 'mask' is MASK. In Python, it is List[torch.Tensor]."
    },
    {
        "question": "What is the infra type for the ExtendMaskList node?",
        "answer": "The infra type for the ExtendMaskList node is CPU."
    },
    {
        "question": "What is the source code for the ExtendMaskList class?",
        "answer": "The source code for the ExtendMaskList class is: ```python class ExtendMaskList(metaclass=ExtendListMeta): TYPE = \"MASK\" ```"
    }
]