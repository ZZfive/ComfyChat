[
    {
        "question": "What is the purpose of the MaskByColor node in ComfyUI?",
        "answer": "The MaskByColor node in ComfyUI is used to create a mask based on a specified color."
    },
    {
        "question": "What is the input type for the 'image' parameter in the MaskByColor node?",
        "answer": "The input type for the 'image' parameter in the MaskByColor node is Comfy dtype: IMAGE and Python dtype: torch.Tensor."
    },
    {
        "question": "How can you select a color using the 'color' parameter in the MaskByColor node?",
        "answer": "You can select a color for the 'color' parameter in the MaskByColor node by clicking on the color block and using the color picker panel. The eyedropper tool can also be used to pick a color from the screen when the browser window is maximized."
    },
    {
        "question": "What happens if a value is provided for the 'color_in_HEX' parameter in the MaskByColor node?",
        "answer": "If a value is provided for the 'color_in_HEX' parameter in the MaskByColor node, it takes precedence over the color selected using the 'color' parameter."
    },
    {
        "question": "What does the 'threshold' parameter control in the MaskByColor node?",
        "answer": "The 'threshold' parameter in the MaskByColor node controls the range of the mask. A higher value results in a larger mask range."
    },
    {
        "question": "What is the purpose of the 'fix_gap' parameter in the MaskByColor node?",
        "answer": "The 'fix_gap' parameter in the MaskByColor node is used to fill in gaps in the mask. Increasing its value can help fill more noticeable gaps."
    },
    {
        "question": "What does the 'invert_mask' parameter do in the MaskByColor node?",
        "answer": "The 'invert_mask' parameter in the MaskByColor node determines whether the mask should be inverted."
    },
    {
        "question": "What is the output type of the MaskByColor node?",
        "answer": "The output type of the MaskByColor node is Comfy dtype: MASK and Python dtype: torch.Tensor."
    }
]