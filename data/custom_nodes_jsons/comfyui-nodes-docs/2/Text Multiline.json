[
    {
        "question": "What is the main purpose of the WAS_Text_Multiline node?",
        "answer": "The WAS_Text_Multiline node is used for processing and formatting multiline text input. It filters out comments and empty lines and then replaces predefined and custom markers with their corresponding values, providing a versatile way to inject dynamic data into text templates."
    },
    {
        "question": "What is the significance of the 'text' input parameter in the WAS_Text_Multiline node?",
        "answer": "The 'text' parameter is the main input of the WAS_Text_Multiline node. It accepts multi-line strings that may contain comments and marker placeholders. This input is crucial because it defines the raw text that will be processed and formatted by the node."
    },
    {
        "question": "What is the role of the 'new_text' output parameter in the WAS_Text_Multiline node?",
        "answer": "The 'new_text' output parameter represents the processed and marker-replaced text after filtering. It is significant as it serves as the node's final output, providing users with a properly formatted text ready for use."
    },
    {
        "question": "What additional features can the WAS_Text_Multiline node provide beyond basic text processing?",
        "answer": "The WAS_Text_Multiline node not only processes and formats text but also replaces predefined and custom markers with their corresponding values, which can be configured through a configuration file. This feature allows users to inject dynamic data into text templates."
    },
    {
        "question": "What are the input types required by the WAS_Text_Multiline node?",
        "answer": "The required input types for the WAS_Text_Multiline node include 'text', which accepts a multi-line string with possible comments and marker placeholders. The 'text' input has a Comfy dtype of STRING and a Python dtype of str."
    },
    {
        "question": "What are the output types produced by the WAS_Text_Multiline node?",
        "answer": "The output types produced by the WAS_Text_Multiline node include 'new_text', which contains the processed and marked-replaced text. 'new_text' is also a Comfy dtype of STRING and a Python dtype of str."
    },
    {
        "question": "What additional information do you need to know before using the WAS_Text_Multiline node?",
        "answer": "Before using the WAS_Text_Multiline node, you should ensure that it operates on an Infrastructure type of CPU. This ensures that the node runs efficiently on standard computing resources available to users."
    }
]