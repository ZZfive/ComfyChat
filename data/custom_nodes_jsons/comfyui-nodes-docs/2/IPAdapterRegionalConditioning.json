[
    {
        "question": "IPAdapterRegionalConditioning节点的主要作用是什么？",
        "answer": "IPAdapterRegionalConditioning节点主要用于处理图像生成过程中指定区域的注意力遮罩和文本条件化。"
    },
    {
        "question": "IPAdapterRegionalConditioning节点的输入参数中，哪些是必需的？",
        "answer": "IPAdapterRegionalConditioning节点的必需输入参数包括：image（参考图像）、image_weight（图像权重）、prompt_weight（文本权重）、weight_type（权重类型）、start_at（开始位置）和end_at（结束位置）。"
    },
    {
        "question": "IPAdapterRegionalConditioning节点的输入参数中，哪些是可选的？",
        "answer": "IPAdapterRegionalConditioning节点的可选输入参数包括：mask（注意力遮罩）、positive（正向条件化）和negative（负向条件化）。"
    },
    {
        "question": "IPAdapterRegionalConditioning节点的输出类型有哪些？",
        "answer": "IPAdapterRegionalConditioning节点的输出类型包括：IPADAPTER_PARAMS（IP适配器参数）、POSITIVE（正向条件化）和NEGATIVE（负向条件化）。"
    },
    {
        "question": "使用IPAdapterRegionalConditioning节点时，如何设置注意力遮罩？",
        "answer": "在IPAdapterRegionalConditioning节点中，通过可选输入参数mask来设置注意力遮罩，用于指定生成图像的注意力区域。"
    },
    {
        "question": "使用IPAdapterRegionalConditioning节点时，如何控制生成图像的正向和负向条件？",
        "answer": "在IPAdapterRegionalConditioning节点中，通过可选输入参数positive和negative来控制生成图像的正向和负向条件。"
    },
    {
        "question": "IPAdapterRegionalConditioning节点的源代码中，conditioning函数的作用是什么？",
        "answer": "在IPAdapterRegionalConditioning节点的源代码中，conditioning函数用于根据输入参数生成IP适配器参数、正向条件化和负向条件化。"
    },
    {
        "question": "IPAdapterRegionalConditioning节点支持的基础设施类型是什么？",
        "answer": "IPAdapterRegionalConditioning节点支持的基础设施类型是GPU。"
    }
]