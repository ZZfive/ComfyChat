[
    {
        "question": "What is the purpose of the primitive-types repository?",
        "answer": "The primitive-types repository contains typed primitives for ComfyUI in the form of nodes such as `int`, `float`, `string`, and `string` (multiline)."
    },
    {
        "question": "What are the different types of nodes available in the primitive-types repository?",
        "answer": "The primitive-types repository includes the following nodes: `int`, `float`, `string`, and `string` (multiline)."
    },
    {
        "question": "Why were these primitives created for ComfyUI?",
        "answer": "These primitives were created because the standard primitive node in ComfyUI cannot be routed, requiring a direct connection to the sampler node."
    },
    {
        "question": "How do the typed primitives in the primitive-types repository address the routing limitation?",
        "answer": "With an `int` node from the primitive-types repository, you can route it multiple times if needed, overcoming the routing limitation of the standard primitive node."
    },
    {
        "question": "What is an example use case for the typed primitives in ComfyUI?",
        "answer": "An example use case for the typed primitives is when you have a configuration node, such as `CFG`, and want to route it to the sampler node without connecting it directly."
    },
    {
        "question": "Can the `string` node in the primitive-types repository handle multiline strings?",
        "answer": "Yes, the primitive-types repository includes a `string` (multiline) node that can handle multiline strings."
    },
    {
        "question": "How does using typed primitives benefit ComfyUI users?",
        "answer": "Using typed primitives from the primitive-types repository allows ComfyUI users to route nodes multiple times, providing greater flexibility and functionality in their configurations."
    }
]