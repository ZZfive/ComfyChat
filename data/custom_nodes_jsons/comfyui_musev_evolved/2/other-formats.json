[
    {
        "question": "ComfyUI의 cg-noise 노드는 무엇을 하는 것인가요?",
        "answer": "cg-noise 노드는 ComfyUI에서 KSampler와 KSampler Advanced를 대체하는 사용자 정의 노드입니다. 초기 노이즈에 대한 작은 변형을 허용합니다."
    },
    {
        "question": "cg-noise 노드는 이미지에 변화를 줄 때 어떤 방식을 사용하나요?",
        "answer": "cg-noise 노드는 두 개의 시드와 가중치 'x'를 사용하여 변화를 생성합니다. 'random_based_on(variation_seed) * x + random_based_on(seed) * (1-x)' 공식을 사용하여 노이즈를 생성합니다."
    },
    {
        "question": "ComfyUI에서 체크포인트를 변환하는 가장 쉬운 방법은 무엇인가요?",
        "answer": "ComfyUI에서 체크포인트를 변환하는 가장 쉬운 방법은 SD에서 Diffusers로 스페이스를 사용하는 것입니다. 스페이스의 지침에 따라 체크포인트를 변환할 수 있습니다."
    },
    {
        "question": "체크포인트 변환 스크립트를 실행하려면 어떤 조건이 있어야 하나요?",
        "answer": "체크포인트 변환 스크립트를 실행하려면 로컬 클론에서 🤗 Diffusers가 있어야 하고, 허브에 푸시할 수 있도록 Hugging Face 계정에 로그인해야 합니다."
    },
    {
        "question": "KerasCV 체크포인트를 변환하기 위한 스페이스는 어떤 기능을 제공하나요?",
        "answer": "KerasCV 체크포인트를 변환하기 위한 스페이스는 .pb 또는 .h5 파일을 PyTorch로 변환하고 추론을 위해 StableDiffusionPipeline로 감쌉니다. 변환된 체크포인트는 Hugging Face Hub의 리포지토리에 저장됩니다."
    },
    {
        "question": "A1111 LoRA 체크포인트를 불러오기 위해 🤗 Diffusers는 어떤 방법을 사용하나요?",
        "answer": "🤗 Diffusers는 '~loaders.LoraLoaderMixin.load_lora_weights' 메서드를 사용하여 A1111 LoRA 체크포인트를 불러옵니다."
    },
    {
        "question": "A1111 LoRA 체크포인트를 사용하거나 테스트하려면 어떤 절차를 거쳐야 하나요?",
        "answer": "먼저 Civitai에서 LoRA 체크포인트를 다운로드합니다. 그런 다음 '~loaders.LoraLoaderMixin.load_lora_weights' 메서드를 사용하여 파이프라인에 체크포인트를 불러온 후 이미지 생성에 사용할 수 있습니다."
    }
]