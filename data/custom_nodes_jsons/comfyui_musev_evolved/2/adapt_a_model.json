[
    {
        "question": "사전학습된 text-to-image 모델을 인페인팅에 적용하기 위해 어떤 아키텍처를 수정해야 하나요?",
        "answer": "사전학습된 text-to-image 모델을 인페인팅에 적용하기 위해 `UNet2DConditionModel` 아키텍처를 초기화하고 수정해야 합니다."
    },
    {
        "question": "사전학습된 text-to-image 모델의 기본 in_channels 수는 몇 개 입니까?",
        "answer": "사전학습된 text-to-image 모델의 기본 in_channels 수는 4개 입니다."
    },
    {
        "question": "인페인팅은 입력 샘플에 몇 개의 채널이 필요가요?",
        "answer": "인페인팅은 입력 샘플에 9개의 채널이 필요합니다."
    },
    {
        "question": "인페인팅에 대한 text-to-image 모델을 적용하기 위해 in_channels 수를 어떻게 수정해야 하나요?",
        "answer": "인페인팅에 대한 text-to-image 모델을 적용하기 위해 in_channels 수를 4에서 9로 수정해야 합니다."
    },
    {
        "question": "크기가 안 맞는 오류를 피하기 위해 어떤 설정을 해야 하나요?",
        "answer": "`in_channels`의 수를 수정할 때 크기가 안 맞는 오류를 피하기 위해 `ignore_mismatched_sizes=True` 및 `low_cpu_mem_usage=False`를 설정해야 합니다."
    },
    {
        "question": "unet의 입력 채널 가중치는 어떻게 초기화되나요?",
        "answer": "Text-to-image 모델로부터 다른 구성 요소의 사전학습된 가중치는 체크포인트로부터 초기화되지만 `unet`의 입력 채널 가중치 (`conv_in.weight`)는 랜덤하게 초기화됩니다."
    },
    {
        "question": "unet의 입력 채널 가중치를 랜덤하게 초기화하는 이유는 무엇인가요?",
        "answer": "unet의 입력 채널 가중치를 랜덤하게 초기화하는 것은 중요합니다. 그렇지 않으면 모델이 노이즈를 리턴하기 때문에 인페인팅의 모델을 파인튜닝 할 때 필요합니다."
    }
]