[
    {
        "messages": [
            {
                "role": "user",
                "content": "What is the purpose of the `denoise` value in the KSampler (advanced) node?"
            },
            {
                "role": "assistant",
                "content": "The `denoise` value allows you to swap models mid generation in img-to-img workflows more efficiently."
            }
        ]
    },
    {
        "messages": [
            {
                "role": "user",
                "content": "What does the Ksampler with Refiner node do?"
            },
            {
                "role": "assistant",
                "content": "This node generates with `base_model` until `refine_step`, then switches to `refine_model` and re-encodes the latent with `refine_vae` if the two passed in VAEs are different. It also allows for a mask to be set if provided."
            }
        ]
    },
    {
        "messages": [
            {
                "role": "user",
                "content": "What does the Swap node do with its two inputs?"
            },
            {
                "role": "assistant",
                "content": "If the swap bool is `False`, it pipes input 1 into output A and input 2 into output B. If the swap bool is `True`, it swaps the outputs, mapping 1 to B and 2 to A. This is useful when combined with piping workflows."
            }
        ]
    },
    {
        "messages": [
            {
                "role": "user",
                "content": "What is the purpose of the Crop Image and Mask node?"
            },
            {
                "role": "assistant",
                "content": "This node is used to crop an image and its corresponding mask. It takes an image, a mask, a minimum width, a minimum height, and padding as inputs."
            }
        ]
    },
    {
        "messages": [
            {
                "role": "user",
                "content": "What is the purpose of the Scale Image to Size node?"
            },
            {
                "role": "assistant",
                "content": "This node is used to scale an image to a desired size. It takes an image, a desired size, and a boolean value `doLarger` as inputs and calculates the scale factor based on the desired size and the smaller or larger dimension of the image."
            }
        ]
    },
    {
        "messages": [
            {
                "role": "user",
                "content": "What does the Paste with Masks node do?"
            },
            {
                "role": "assistant",
                "content": "This node is used to paste a source image onto a destination image using masks. It takes a source image, a source mask, a destination image, and a destination mask as inputs, as well as a horizontal padding, a vertical padding, and a global padding."
            }
        ]
    },
    {
        "messages": [
            {
                "role": "user",
                "content": "What does the Alpha Composite node do?"
            },
            {
                "role": "assistant",
                "content": "This node is used to composite a source image and a destination image using alpha blending. It takes a source image, a destination image, a source mask, a destination mask, an x offset, and a y offset as inputs."
            }
        ]
    },
    {
        "messages": [
            {
                "role": "user",
                "content": "What is the purpose of the Set Dict node?"
            },
            {
                "role": "assistant",
                "content": "This node takes in any value and packages it into a `DICT` labeled as `key` and sends it out. A `dict` can optionally be passed in, in which case it will append the value to the input dict."
            }
        ]
    },
    {
        "messages": [
            {
                "role": "user",
                "content": "What does the Get Dict node do?"
            },
            {
                "role": "assistant",
                "content": "This node takes in a `DICT`, a `key`, and a `default` value as inputs. If `key` is found in the `DICT`, it will pass it out. Otherwise, `default` will be used."
            }
        ]
    },
    {
        "messages": [
            {
                "role": "user",
                "content": "What are the core functionalities of the Get Dict TYPE nodes?"
            },
            {
                "role": "assistant",
                "content": "These nodes behave similar to the standard Get Dict, with the exception that `default` is optional and inputs are validated with their type."
            }
        ]
    },
    {
        "messages": [
            {
                "role": "user",
                "content": "What is the purpose of the Get Dict Unsafe node?"
            },
            {
                "role": "assistant",
                "content": "This is a special variant of `get dict` with NO `default`. If the input does not exist, it will return `None`. It can be useful if you are using a lot of custom types and don't want to populate all the defaults."
            }
        ]
    }
]