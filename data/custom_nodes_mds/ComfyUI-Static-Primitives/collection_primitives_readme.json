{
    "data": [
        {
            "subject": "ComfyUI-Static-Primitives",
            "question": "How can I add my own collection primitives?",
            "answer": "You can add your own collection primitives by defining them in a `.json` file and placing it in the `ComfyUI-Static-Primitives/collection_primitives/` directory."
        },
        {
            "subject": "ComfyUI-Static-Primitives",
            "question": "In what file format should custom collection primitive groups be defined?",
            "answer": "Custom collection primitive groups should be defined in a `.json` format."
        },
        {
            "subject": "ComfyUI-Static-Primitives",
            "question": "Where should custom collection primitive files be placed?",
            "answer": "Custom collection primitive files should be placed in the `ComfyUI-Static-Primitives/collection_primitives/` directory."
        },
        {
            "subject": "ComfyUI-Static-Primitives",
            "question": "What is the structure of a collection primitive definition?",
            "answer": "A collection primitive definition structure consists of key-value pairs with the key representing the display name of the node and the value being a list of strings that correspond to the options for the node's dropdown."
        },
        {
            "subject": "ComfyUI-Static-Primitives",
            "question": "What is an example of a default collection primitive file in ComfyUI-Static-Primitives?",
            "answer": "An example of a default collection primitive file is `samplers_and_schedulers.json`, which contains definitions for scheduler and sampler nodes."
        },
        {
            "subject": "ComfyUI-Static-Primitives",
            "question": "What is the significance of avoiding duplicate keys across collection primitive files?",
            "answer": "Avoiding duplicate keys is crucial because if any duplicate keys are found while loading, all definitions with that key will be ignored."
        }
    ]
}