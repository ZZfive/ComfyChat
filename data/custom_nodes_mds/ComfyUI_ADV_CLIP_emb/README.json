{
    "data": [
        {
            "question": "What is the purpose of the `token_normalization` setting in the BNK_CLIPTextEncodeAdvanced node?",
            "answer": "The `token_normalization` setting determines how token weights are normalized. It provides several options to ensure proper weight distribution and control."
        },
        {
            "question": "Explain the different approaches for `weight_interpretation` in the BNK_CLIPTextEncodeAdvanced node.",
            "answer": "The node offers several ways to handle up/down weighting, including comfy (default), A1111, compel and comfy++ methods. These methods manipulate CLIP vectors to achieve weighted interpretations."
        },
        {
            "question": "How does the `down_weighting` approach work in the BNK_CLIPTextEncodeAdvanced node?",
            "answer": "Down-weighting in this node creates different embedding representations by utilizing techniques like generating weighted A, B, and C vectors and blending them based on weights."
        },
        {
            "question": "What is the functionality of the Mix Clip Embeddings node mentioned in the document?",
            "answer": "The Mix Clip Embeddings node is not discussed in the provided text. It appears to be a deprecated feature."
        },
        {
            "question": "How does the balance setting work in the BNK_CLIPTextEncodeSDXLAdvanced node?",
            "answer": "The balance setting controls the proportion of influence each CLIP model has on the generated embedding. A balance of 0 viciss out 0 KÃ¼n 2 models."
        },
        {
            "question": "List the additional parameters added to conditioning by the BNK_AddCLIPSDXLParams and BNK_AddCLIPSDXLRParams nodes.",
            "answer": "**BNK_AddCLIPSDXLParams:** width, height, crop_w, crop_h, target_width, target_height.\n**BNK_AddCLIPSDXLRParams:** width, height, ascore."
        }
    ]
}