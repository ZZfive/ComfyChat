{
    "qna": [
        {
            "question": "What are the typed primitives available in ComfyUI?",
            "answer": "ComfyUI provides typed primitives in the form of the following nodes: `int`, `float`, `string`, and `string` (multiline)."
        },
        {
            "question": "Why are typed primitives necessary in ComfyUI?",
            "answer": "Typed primitives are necessary in ComfyUI because the standard primitive node cannot be routed. With typed primitives like `int`, `float`, `string`, and multiline `string`, one can route these nodes multiple times if required, enhancing the configuration flexibility."
        },
        {
            "question": "Can the standard primitive node in ComfyUI be routed?",
            "answer": "No, the standard primitive node in ComfyUI cannot be routed directly. This lack of routing is addressed by the availability of typed primitives such as `int`, `float`, `string`, and multiline `string`."
        },
        {
            "question": "How does the `int` node in ComfyUI differ from the standard primitive node?",
            "answer": "The `int` node in ComfyUI can be routed multiple times, unlike the standard primitive node which does not have this capability. This allows for greater flexibility in connecting configuration nodes, such as `CFG`, to sampler nodes."
        },
        {
            "question": "What is an example of a configuration node that can benefit from typed primitives in ComfyUI?",
            "answer": "An example of a configuration node that can benefit from typed primitives in ComfyUI is a `CFG` node. By using typed primitives like `int`, `float`, `string`, and multiline `string`, the `CFG` node can be connected to sampler nodes more flexibly, taking advantage of the routing capabilities provided by the typed primitives."
        },
        {
            "question": "Can the `string` primitive in ComfyUI be multiline?",
            "answer": "Yes, ComfyUI provides a multiline `string` primitive node, which allows for the input and processing of multiline strings, providing more complex and flexible configurations where multi-line text is required."
        }
    ]
}